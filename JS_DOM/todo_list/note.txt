
!!! go to root where .git is located and here do:


---------------- Webpack ----------------
1. npm init - (create based package) -> package.json
2. package.json: npm install webpack --save -> node_modules
3. add node_modules to .gitignore
4. npm install webpack-cli --save -> the tool used to run webpack on the command line
5. in root we should create file "webpack.config.js" then add code from https://webpack.js.org/concepts/#entry
6. in webpack.config.js add "mode: "development" to obj and the in index.bundle.js bundle is goint to appear
7. .\node_modules\.bin\webpack (or npx webpack) --config webpack.config.js -> create dir dist with .bundle.js file
8. add build command to package.json

---------------- ESLint ----------------
1. npm install eslint --save-dev
2. npm init @eslint/config
3. add "root": true to .eslintrc.json - to avoid climbing higest dirs
4. add "ignorePatterns": "ignorePatterns": [
    "CCS-3/*",
    "CSS-1/*",
    "CSS-2",
    "CSS-4",
    "HTML_HW_01",
    "HTML_HW_02",
    "JS_BASIC_HW_08",
    "JS_BASIC_HW_09",
    "JS_BASIC_HW_10",
    "JS_PROJECT_12/todo/app/*.js",
    "JS_PROJECT_12/todo/*.txt",
    "*.config.js"
  ] to .eslintrc.json
5. add "lint": "npx eslint -c .eslintrc.json *.js" to package.json

--------------- Prettier ---------------
1. npm install --save-dev --save-exact prettier
2. create .prettierrc.json with empty obj {} inside
3. add "prettier": "npx prettier" to package.json

----------------- HOOKS -----------------
go to root where .git is located and here do:
1. npm install --save-dev husky lint-staged
2. npx husky install
3. npm set-script prepare "husky install"
4. npx husky add .husky/pre-commit "npx lint-staged"
5. add "lint-staged": {
    "*.js": [
      "npm run lint",
      "npm run prettier"
    ]
  }


------------ плюшки вебпаку ------------
1. збирає проект в один або кілька джс фйлів
2. транспайлінг джс файлів (бейбл)
3. девсервер для розробки
4. на великих проектах - лейзлі лоад бандлів -> бандли це частина коду, яка використовується окремо від інших для задоволення конкретних потреб (наприклад, в одному роуті використовується 10 компонентів і не використовується 15 інших, завядки бандлам можна забезпечити розділення цих компонентів)

```````git```````
to change user git config user.name ... git config user.email ...



